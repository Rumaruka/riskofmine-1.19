buildscript {
    repositories {
        maven {
            url = 'https://repo.spongepowered.org/repository/maven-public/'
            content { includeGroup "org.spongepowered" }
        }
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'org.jetbrains.kotlin.jvm' version '1.8.0'
}

apply plugin: 'org.spongepowered.mixin'
apply from: 'https://raw.githubusercontent.com/TimeConqueror/Time-Core/1.19/gradle/scripts/timecore.gradle'

version = '1.0'
group = 'com.rumaruka.riskofmine'
archivesBaseName = 'riskofmine'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {

    mappings channel: 'parchment', version: '2022.12.18-1.19.3'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'


            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'riskofmine'

            mods {
                riskofmine {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'riskofmine'

            mods {
                riskofmine {
                    source sourceSets.main
                }
            }
        }


        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'riskofmine'

            mods {
                riskofmine {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'riskofmine', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                riskofmine {
                    source sourceSets.main
                }
            }
        }
    }
}


sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenLocal()

    maven {
        name = "Curios"
        url = "https://maven.theillusivec4.top/"
    }

    maven {
        // location of a maven that hosts all files on CurseForge
        name 'CurseMaven'
        url 'https://www.cursemaven.com/'
    }
    maven { url = "https://dvs1.progwml6.com/files/maven" }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
}

dependencies {

    minecraft 'net.minecraftforge:forge:1.19.3-44.1.8'

    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.19.3-5.1.2.0")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.19.3-5.1.2.0:api")


    compileOnly fg.deobf("mezz.jei:jei-1.19.3-common-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-1.19.3-forge-api:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-1.19.3-forge:${jei_version}")




    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "riskofmine",
                "Specification-Vendor"    : "Rumaruka",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Rumaruka",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}


jar.finalizedBy('reobfJar')


publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}


